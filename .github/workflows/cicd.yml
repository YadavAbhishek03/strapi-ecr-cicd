name: CI/CD - Deploy Strapi on ECS Fargate with Terraform

on:
  push:
    branches:
      - main  # Trigger when you push to the main branch

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  deploy:
    name: Build Docker Image, Push to ECR & Deploy Infra with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        id: build-image
        run: |
          IMAGE_TAG=$(date +%s)
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Building Docker image..."
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "::set-output name=image_uri::$IMAGE_URI"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init, Plan and Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve \
            -var="api_token_salt=${{ secrets.STRAPI_API_TOKEN_SALT }}" \
            -var="admin_jwt_secret=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}" \
            -var="transfer_token_salt=${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}" \
            -var="app_keys=${{ secrets.STRAPI_APP_KEYS }}" \
            -var="ecr_image_url=${{ env.IMAGE_URI }}"
